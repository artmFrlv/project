{"version":3,"sources":["components/main/Header.js","components/main/Footer.js","components/main/Card.js","components/main/Cards.js","components/main/Body.js","components/ticTacToe/Square.js","components/ticTacToe/Board.js","store/actionCreators/ticTacToe.js","store/actionTypes/ticTacToe.js","components/ticTacToe/Winner.js","components/ticTacToe/Alert.js","components/ticTacToe/Game.js","components/ticTacToe/Character.js","components/ticTacToe/CharacterSelection.js","components/ticTacToe/TicTacToe.js","components/checkers/Character.js","components/checkers/CharacterSelection.js","store/actionCreators/checkers.js","store/actionTypes/checkers.js","components/checkers/Cell.js","components/checkers/Board.js","components/checkers/Winner.js","components/checkers/Alert.js","components/checkers/Game.js","components/checkers/Checkers.js","components/tetris/Cell.js","components/tetris/Board.js","components/tetris/Tetris.js","components/main/Main.js","store/initialState/checkers.js","store/reducers/reducerOfCheckers.js","store/initialState/ticTacToe.js","store/reducers/reducerOfTicTacToe.js","store/initialState/tetris.js","store/reducers/reducerOfTetris.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Footer","Card","props","link","name","games","Cards","map","game","Body","Square","value","onClick","move","index","Board","board","lines","i","length","a","b","c","this","endGame","count","checkBoard","React","Component","connect","state","ticTacToe","dispatch","winner","type","Winner","clearingBoard","Alert","alert","Game","Character","character","selected","choose","number","CharacterSelection","chooseCharacter","characters","players","_characters","TicTacToe","checkers","Cell","isKing","correctAction","row","column","color","player","kings","chosenChecker","gamerNumber","switchPlayer","gamer","turnPhase","chooseKingsChecker","kingsMove","chooseNormalChecker","normalMove","gameStarted","firstPlayer","secondPlayer","firstPlayerCounter","secondPlayerCounter","j","select","array","Checkers","item","tetris","Tetris","Main","exact","path","component","initialState","gameOver","possibleMoves","reducerOfCheckers","action","copyPlayers","otherPlayer","copyBoard","copySwitchPlayer","copyChosenChecker","copyGameStarted","playerNumber","otherPlayerNumber","push","copyPossibleMoves","copyTurnPhase","copyKings","counter","Math","abs","slice","concat","rowChosenChecker","columnChosenChecker","isEaten","counterRow","counterColumn","nextPlayer","_figures","I","shape","J","L","O","S","T","Z","reducerOfTetris","reducer","combineReducers","reducerOfTicTacToe","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce412656.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className={'text'}>\r\n                MINI Games\r\n            </div>\r\n            <div className={'link'}>\r\n                <NavLink to={'/'}> Домой </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            Footer\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n    return(\r\n        <div className=\"card\">\r\n            <NavLink to={props.link}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst games = [\r\n    ['/ticTacToe', 'Крестики-нолики'],\r\n    ['/checkers', 'Шашки'],\r\n    ['/tetris', 'Тетрис']\r\n];\r\n\r\nfunction Cards() {\r\n    return(\r\n        <div className=\"cards\">\r\n            {games.map((game) =>\r\n                <Card link={game[0]} name={game[1]}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\n\r\nfunction Body() {\r\n    return (\r\n        <div className=\"body\">\r\n            <Cards/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;","import React from \"react\";\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <div className={`square ${props.value}`} onClick={() => props.move(props.index)}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Square;","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport {connect} from \"react-redux\";\r\nimport {endGame, move} from \"../../store/actionCreators/ticTacToe\";\r\n\r\nclass Board extends React.Component {\r\n\r\n    checkBoard(board) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6]\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n                this.props.endGame(board[a]);\r\n            }\r\n        }\r\n        let count = 9;\r\n        for (let i = 0; i < board.length; i++) {\r\n            if (board[i] === '')\r\n                count--;\r\n        }\r\n        if (count === 9) {\r\n            this.props.endGame('ничья');\r\n        }\r\n    }\r\n\r\n    move = (index) => {\r\n        this.props.move(index);\r\n    };\r\n\r\n    render() {\r\n        this.checkBoard(this.props.board);\r\n        return (\r\n            <div className={'board'}>\r\n                {this.props.board.map((value, index) =>\r\n                    <Square value={value} index={index}\r\n                            move={(index) => this.move(index)}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.ticTacToe.board\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        endGame: (winner) => dispatch(endGame(winner)),\r\n        move: (index) => dispatch(move(index))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","import {\r\n    CHOOSE_CHARACTER,\r\n    CLEARING_BOARD,\r\n    END_GAME,\r\n    MOVE, TIC_TAC_TOE_CHOOSE_CHARACTER,\r\n    TIC_TAC_TOE_CLEARING_BOARD, TIC_TAC_TOE_END_GAME,\r\n    TIC_TAC_TOE_MOVE\r\n} from \"../actionTypes/ticTacToe\";\r\n\r\nexport function move(index) {\r\n    return {\r\n        type: TIC_TAC_TOE_MOVE,\r\n        index: index\r\n    }\r\n}\r\n\r\nexport function clearingBoard() {\r\n    return {\r\n        type: TIC_TAC_TOE_CLEARING_BOARD\r\n    }\r\n}\r\n\r\nexport function endGame(winner) {\r\n    return {\r\n        type: TIC_TAC_TOE_END_GAME,\r\n        winner: winner\r\n    }\r\n}\r\n\r\nexport function chooseCharacter(number, character) {\r\n    return {\r\n        type: TIC_TAC_TOE_CHOOSE_CHARACTER,\r\n        number: number,\r\n        character: character\r\n    }\r\n}","export const TIC_TAC_TOE_MOVE = 'TIC_TAC_TOE_MOVE';\r\nexport const TIC_TAC_TOE_CLEARING_BOARD = 'TIC_TAC_TOE_CLEARING_BOARD';\r\nexport const TIC_TAC_TOE_END_GAME = 'TIC_TAC_TOE_END_GAME';\r\nexport const TIC_TAC_TOE_CHOOSE_CHARACTER = 'TIC_TAC_TOE_CHOOSE_CHARACTER';","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {clearingBoard} from \"../../store/actionCreators/ticTacToe\";\r\n\r\nclass Winner extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"winner\">\r\n                <div className={'text'}>\r\n                    {`Winner: ${this.props.winner}`}\r\n                </div>\r\n                <div className={'recycle'} onClick={() => this.props.clearingBoard()}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        winner: state.ticTacToe.winner\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        clearingBoard: ()=> {dispatch(clearingBoard())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Winner);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Alert extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className={'alert'}>\r\n                {this.props.alert}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        alert: state.ticTacToe.alert\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Alert);","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport Winner from \"./Winner\";\r\nimport Alert from \"./Alert\";\r\n\r\n\r\nfunction Game() {\r\n    return (\r\n        <div className={'game'}>\r\n            <Winner/>\r\n            <Board/>\r\n            <Alert/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\n\r\nfunction Character(props) {\r\n    return (\r\n        <div className={`character ${props.character} ${props.selected}`}\r\n             onClick={() => props.choose(props.number, props.character)}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Character;","import React from \"react\";\r\nimport Character from \"./Character\";\r\nimport {connect} from \"react-redux\";\r\nimport {chooseCharacter} from \"../../store/actionCreators/ticTacToe\";\r\n\r\nclass CharacterSelection extends React.Component {\r\n    choose = (number, character) => {\r\n        this.props.chooseCharacter(number, character);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={'characterSelection'}>\r\n                <div className={'text'}>\r\n                    Выберите иконку для {this.props.number === 0 ? 'первого' : 'второго'} игрока\r\n                </div>\r\n                <div className={'characters'}>\r\n                    {this.props.characters.map((character) =>\r\n                        <Character character={character} number={this.props.number}\r\n                                   selected={character === this.props.players[this.props.number] ? 'selected' : ''}\r\n                                   choose={(number, character) => this.choose(number, character)}/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        characters: state.ticTacToe._characters,\r\n        players: state.ticTacToe.players\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        chooseCharacter: (number, character) => dispatch(chooseCharacter(number, character))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterSelection);","import React from \"react\";\r\nimport '../../styles/ticTacToe.scss';\r\nimport '../../styles/characterSelection.scss'\r\nimport Game from \"./Game\";\r\nimport CharacterSelection from \"./CharacterSelection\";\r\n\r\n\r\nclass TicTacToe extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={'ticTacToe'}>\r\n                <CharacterSelection number={0}/>\r\n                <Game/>\r\n                <CharacterSelection number={1}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TicTacToe;","import React from \"react\";\r\n\r\nfunction Character(props) {\r\n    return (\r\n        <div className={`character ${props.character} ${props.selected}`}\r\n             onClick={() => props.choose(props.number, props.character)}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Character;","import React from \"react\";\r\nimport Character from \"./Character\";\r\nimport {connect} from \"react-redux\";\r\nimport {chooseCharacter} from \"../../store/actionCreators/checkers\";\r\n\r\nclass CharacterSelection extends React.Component {\r\n    choose = (number, character) => {\r\n        this.props.chooseCharacter(number, character);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={'characterSelection'}>\r\n                <div className={'text'}>\r\n                    Выберите иконку для {this.props.number === 0 ? 'первого' : 'второго'} игрока\r\n                </div>\r\n                <div className={'characters'}>\r\n                    {this.props.characters.map((character) =>\r\n                        <Character character={character} number={this.props.number}\r\n                                   selected={character === this.props.players[this.props.number] ? 'selected' : ''}\r\n                                   choose={(number, character) => this.choose(number, character)}/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        characters: state.checkers._characters,\r\n        players: state.checkers.players\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        chooseCharacter: (number, character) => dispatch(chooseCharacter(number, character))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterSelection);","import {\r\n    CHECKERS_CHOOSE_CHARACTER, CHECKERS_CHOOSE_NORMAL_CHECKER,\r\n    CHECKERS_KINGS_MOVE, CHECKERS_NORMAL_MOVE,\r\n    CHECKERS_CHOOSE_KINGS_CHECKER, CHECKERS_END_GAME, CHECKERS_CLEARING_BOARD\r\n} from \"../actionTypes/checkers\";\r\n\r\nexport function normalMove(row, column) {\r\n    return {\r\n        type: CHECKERS_NORMAL_MOVE,\r\n        row: row,\r\n        column: column\r\n    }\r\n}\r\n\r\nexport function kingsMove(row, column) {\r\n    return {\r\n        type: CHECKERS_KINGS_MOVE,\r\n        row: row,\r\n        column: column\r\n    }\r\n}\r\n\r\nexport function chooseCharacter(number, character) {\r\n    return {\r\n        type: CHECKERS_CHOOSE_CHARACTER,\r\n        number: number,\r\n        character: character\r\n    }\r\n}\r\n\r\nexport function chooseNormalChecker(player, row, column) {\r\n    return {\r\n        type: CHECKERS_CHOOSE_NORMAL_CHECKER,\r\n        player: player,\r\n        row: row,\r\n        column: column\r\n    }\r\n}\r\n\r\nexport function chooseKingsChecker(player, row, column) {\r\n    return {\r\n        type: CHECKERS_CHOOSE_KINGS_CHECKER,\r\n        player: player,\r\n        row: row,\r\n        column: column\r\n    }\r\n}\r\n\r\nexport function endGame(winner) {\r\n    return {\r\n        type: CHECKERS_END_GAME,\r\n        winner: winner\r\n    }\r\n}\r\n\r\nexport function clearingBoard() {\r\n    return {\r\n        type: CHECKERS_CLEARING_BOARD\r\n    }\r\n}","export const CHECKERS_NORMAL_MOVE = 'CHECKERS_NORMAL_MOVE';\r\nexport const CHECKERS_KINGS_MOVE = 'CHECKERS_KINGS_MOVE';\r\nexport const CHECKERS_CLEARING_BOARD = 'CHECKERS_CLEARING_BOARD';\r\nexport const CHECKERS_END_GAME = 'CHECKERS_END_GAME';\r\nexport const CHECKERS_CHOOSE_CHARACTER = 'CHECKERS_CHOOSE_CHARACTER';\r\nexport const CHECKERS_CHOOSE_NORMAL_CHECKER = 'CHECKERS_CHOOSE_NORMAL_CHECKER';\r\nexport const CHECKERS_CHOOSE_KINGS_CHECKER = 'CHECKERS_CHOOSE_KINGS_CHECKER';","import React from \"react\";\r\n\r\nfunction Cell(props) {\r\n    return (\r\n        <div className={`cell ${props.selected} ${props.isKing}`} onClick={() => {\r\n            return props.correctAction(props.character, props.row, props.column)\r\n        }}>\r\n            <div className={`color ${props.color}`}>\r\n\r\n            </div>\r\n            <div className={`character ${props.character}`}>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cell;","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    chooseKingsChecker,\r\n    chooseNormalChecker,\r\n    endGame,\r\n    kingsMove,\r\n    normalMove\r\n} from \"../../store/actionCreators/checkers\";\r\n\r\nclass Board extends React.Component {\r\n    correctAction = (player, row, column) => {\r\n        let isKing = false;\r\n        for (let i = 0; i < this.props.kings.length; i++) {\r\n            if ((this.props.kings[i][0] === this.props.chosenChecker[0] && this.props.kings[i][1] === this.props.chosenChecker[1]) ||\r\n                (this.props.kings[i][0] === row && this.props.kings[i][1] === column))\r\n                isKing = true;\r\n        }\r\n        const gamerNumber = this.props.switchPlayer ? 1 : 0;\r\n        const gamer = this.props.players[gamerNumber];\r\n\r\n        if (player === '') {\r\n            if (isKing) {\r\n                if (this.props.turnPhase) {\r\n                    this.props.chooseKingsChecker(gamer, this.props.chosenChecker[0], this.props.chosenChecker[1]);\r\n                }\r\n                this.props.kingsMove(row, column);\r\n                return;\r\n            }\r\n            if (this.props.turnPhase) {\r\n                this.props.chooseNormalChecker(gamer, this.props.chosenChecker[0], this.props.chosenChecker[1]);\r\n            }\r\n            this.props.normalMove(row, column);\r\n            return;\r\n        }\r\n\r\n        if (isKing) {\r\n            this.props.chooseKingsChecker(player, row, column);\r\n            return;\r\n        }\r\n        this.props.chooseNormalChecker(player, row, column);\r\n    };\r\n\r\n    checkBoard = () => {\r\n        if (this.props.gameStarted) {\r\n            const board = this.props.board;\r\n            const firstPlayer = this.props.players[this.props.switchPlayer ? 1 : 0];\r\n            const secondPlayer = this.props.players[this.props.switchPlayer ? 0 : 1];\r\n            let firstPlayerCounter = 0;\r\n            let secondPlayerCounter = 0;\r\n\r\n            for (let i = 0; i < board.length; i++) {\r\n                for (let j = 0; j < board[i].length; j++) {\r\n                    if (board[i][j] === firstPlayer) {\r\n                        firstPlayerCounter += 1;\r\n                    }\r\n                    if (board[i][j] === secondPlayer) {\r\n                        secondPlayerCounter += 1;\r\n                    }\r\n                }\r\n            }\r\n            if (firstPlayerCounter === 0 && secondPlayerCounter !== 0) {\r\n                this.props.endGame(secondPlayer);\r\n            }\r\n            if (secondPlayerCounter === 0 && firstPlayerCounter !== 0) {\r\n                this.props.endGame(firstPlayer);\r\n            }\r\n        }\r\n    };\r\n\r\n    select = (row, column) => {\r\n        return (row === this.props.chosenChecker[0] && column === this.props.chosenChecker[1]) ? 'selected' : '';\r\n    };\r\n\r\n    render() {\r\n        this.checkBoard();\r\n        return (\r\n            <div className={'board'}>\r\n                {this.props.board.map((array, row) =>\r\n                    array.map((character, column) => {\r\n                        let isKing = '';\r\n                        let color = '';\r\n                        for (let i = 0; i < this.props.kings.length; i++) {\r\n                            if (this.props.kings[i][0] === row && this.props.kings[i][1] === column)\r\n                                isKing = 'king';\r\n                        }\r\n                        if ((row + column) % 2) {\r\n                            color = 'brown';\r\n                        } else {\r\n                            color = 'white';\r\n                        }\r\n                        return <Cell character={character} row={row} column={column}\r\n                                     isKing = {isKing} color={color}\r\n                                     selected={this.select(row, column)}\r\n                                     correctAction={(player, row, column) => this.correctAction(player, row, column)}/>\r\n                    })\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapPropsToState(state) {\r\n    return {\r\n        board: state.checkers.board,\r\n        players: state.checkers.players,\r\n        switchPlayer: state.checkers.switchPlayer,\r\n        chosenChecker: state.checkers.chosenChecker,\r\n        kings: state.checkers.kings,\r\n        turnPhase: state.checkers.turnPhase,\r\n        gameStarted: state.checkers.gameStarted\r\n    }\r\n}\r\n\r\nfunction mapDispatchToState(dispatch) {\r\n    return {\r\n        chooseNormalChecker: (player, row, column) => dispatch(chooseNormalChecker(player, row, column)),\r\n        normalMove: (row, column) => dispatch(normalMove(row, column)),\r\n        kingsMove: (row, column) => dispatch(kingsMove(row, column)),\r\n        chooseKingsChecker: (player, row, column) => dispatch(chooseKingsChecker(player, row, column)),\r\n        endGame: (winner) => dispatch(endGame(winner))\r\n    }\r\n}\r\n\r\nexport default connect(mapPropsToState, mapDispatchToState)(Board);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {clearingBoard} from \"../../store/actionCreators/checkers\";\r\n\r\nclass Winner extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"winner\">\r\n                <div className={'text'}>\r\n                    {`Winner: ${this.props.winner}`}\r\n                </div>\r\n                <div className={'recycle'} onClick={() => this.props.clearingBoard()}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        winner: state.checkers.winner\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        clearingBoard: ()=> {dispatch(clearingBoard())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Winner);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Alert extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className={'alert'}>\r\n                {this.props.alert}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        alert: state.checkers.alert\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Alert);","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport Winner from \"./Winner\";\r\nimport Alert from \"./Alert\";\r\n\r\n\r\nfunction Game() {\r\n    return (\r\n        <div className={'game'}>\r\n            <Winner/>\r\n            <Board/>\r\n            <Alert/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport '../../styles/checkers.scss';\r\nimport '../../styles/characterSelection.scss'\r\nimport CharacterSelection from \"./CharacterSelection\";\r\nimport Game from \"./Game\";\r\n\r\nclass Checkers extends React.Component {\r\n    render() {\r\n        return (\r\n                <div className={'checkers'}>\r\n                    <CharacterSelection number={0}/>\r\n                    <Game/>\r\n                    <CharacterSelection number={1}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkers;","import React from \"react\";\r\n\r\nfunction Cell (props) {\r\n    return (\r\n        <div className={'cell'}>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cell;","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Board extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={'board'}>\r\n                {this.props.board.map(array =>\r\n                    array.map(item => <Cell/>)\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.tetris.board\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Board);\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"../../styles/tetris.scss\";\r\n\r\nclass Tetris extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={'tetris'}>\r\n                <Board/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tetris;","import React from 'react';\r\nimport {Route} from \"react-router-dom\";\r\nimport Header from './Header';\r\nimport Footer from \"./Footer\";\r\nimport Body from \"./Body\";\r\nimport TicTacToe from \"../ticTacToe/TicTacToe\";\r\nimport '../../styles/app.scss';\r\nimport Checkers from \"../checkers/Checkers\";\r\nimport Tetris from \"../tetris/Tetris\";\r\n\r\nfunction Main() {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header/>\r\n            <Route exact path={'/'} component={Body}/>\r\n            <Route exact path={'/ticTacToe'} component={TicTacToe}/>\r\n            <Route exact path={'/checkers'} component={Checkers}/>\r\n            <Route exact path={'/tetris'} component={Tetris}/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","const initialState = {\r\n    switchPlayer: false,\r\n    players: ['', ''],\r\n    winner: '',\r\n    gameOver: false,\r\n    gameStarted: false,\r\n    alert: '',\r\n    turnPhase: false,\r\n    possibleMoves: [],\r\n    chosenChecker: [],\r\n    kings: [],\r\n    board: [\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', ''],\r\n        ['', '', '', '', '', '', '', '']\r\n    ],\r\n    _characters: [\r\n        'cow', 'creeper', 'enderman', 'farmer',\r\n        'sheep', 'skeleton', 'spider', 'steve',\r\n        'zombie'\r\n    ]\r\n};\r\n\r\nexport default initialState;","import initialState from \"../initialState/checkers\";\r\nimport {\r\n    CHECKERS_CHOOSE_CHARACTER, CHECKERS_CHOOSE_KINGS_CHECKER,\r\n    CHECKERS_CHOOSE_NORMAL_CHECKER, CHECKERS_CLEARING_BOARD, CHECKERS_END_GAME,\r\n    CHECKERS_KINGS_MOVE,\r\n    CHECKERS_NORMAL_MOVE\r\n} from \"../actionTypes/checkers\";\r\n\r\nfunction reducerOfCheckers(checkers = initialState, action) {\r\n    switch (action.type) {\r\n        case CHECKERS_CHOOSE_CHARACTER: {\r\n            const copyPlayers = [...checkers.players];\r\n            const otherPlayer = checkers.players[(action.number + 1) % 2];\r\n            const copyBoard = checkers.board;\r\n            let alert = '';\r\n            let copySwitchPlayer = checkers.switchPlayer;\r\n            if (otherPlayer === action.character)\r\n                alert = 'Нельзя выбирать одинаковых персонажей';\r\n\r\n            if (otherPlayer !== action.character && !checkers.gameStarted) {\r\n                copySwitchPlayer = false;\r\n                copyPlayers[action.number] = action.character;\r\n                if (otherPlayer !== '') {\r\n                    for (let i = 0; i < 3; i++) {\r\n                        for (let j = 0; j < copyBoard[i].length; j++) {\r\n                            if ((i + j) % 2 === 1) {\r\n                                if (action.number === 1)\r\n                                    copyBoard[i][j] = action.character;\r\n                                else\r\n                                    copyBoard[i][j] = otherPlayer;\r\n                            }\r\n                        }\r\n                    }\r\n                    for (let i = 5; i < 8; i++) {\r\n                        for (let j = 0; j < copyBoard[i].length; j++) {\r\n                            if ((i + j) % 2 === 1) {\r\n                                if (action.number === 0)\r\n                                    copyBoard[i][j] = action.character;\r\n                                else\r\n                                    copyBoard[i][j] = otherPlayer;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {...checkers, players: [...copyPlayers], board: [...copyBoard], alert: alert, switchPlayer: copySwitchPlayer};\r\n        }\r\n        case CHECKERS_CHOOSE_NORMAL_CHECKER: {\r\n            let copyChosenChecker = [...checkers.chosenChecker];\r\n            let copyGameStarted = checkers.gameStarted;\r\n            const copyBoard = checkers.board;\r\n            const playerNumber = checkers.switchPlayer ? 1 : 0;\r\n            const otherPlayerNumber = checkers.switchPlayer ? 0 : 1;\r\n            const players = checkers.players;\r\n            const possibleMoves = [];\r\n            const row = action.row;\r\n            const column = action.column;\r\n            let alert;\r\n            if (checkers.gameOver) {\r\n                alert = 'Перезапустите игру'\r\n            }\r\n            if (action.player === players[playerNumber]\r\n                && ((checkers.turnPhase && row === copyChosenChecker[0] && column === copyChosenChecker[1])\r\n                    || !checkers.turnPhase) && !checkers.gameOver) {\r\n                copyChosenChecker = [row, column];\r\n                copyGameStarted = true;\r\n\r\n                if (!checkers.turnPhase) {\r\n                    if (playerNumber === 1) {\r\n                        if (row + 1 < 8) {\r\n                            if (column + 1 < 8 && copyBoard[row + 1][column + 1] === '')\r\n                                possibleMoves.push([row + 1, column + 1]);\r\n                            if (column - 1 > -1 && copyBoard[row + 1][column - 1] === '')\r\n                                possibleMoves.push([row + 1, column - 1]);\r\n                        }\r\n                    }\r\n\r\n                    if (playerNumber === 0) {\r\n                        if (row - 1 > -1) {\r\n                            if (column + 1 < 8 && copyBoard[row - 1][column + 1] === '') {\r\n                                possibleMoves.push([row - 1, column + 1]);\r\n                            }\r\n                            if (column - 1 > -1 && copyBoard[row - 1][column - 1] === '') {\r\n                                possibleMoves.push([row - 1, column - 1]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (row + 2 < 8) {\r\n                    if (column + 2 < 8 && copyBoard[row + 2][column + 2] === '' && copyBoard[row + 1][column + 1] === players[otherPlayerNumber]) {\r\n                        possibleMoves.push([row + 2, column + 2]);\r\n                    }\r\n                    if (column - 2 > -1 && copyBoard[row + 2][column - 2] === '' && copyBoard[row + 1][column - 1] === players[otherPlayerNumber]) {\r\n                        possibleMoves.push([row + 2, column - 2]);\r\n                    }\r\n                }\r\n                if (row - 2 > -1) {\r\n                    if (column + 2 < 8 && copyBoard[row - 2][column + 2] === '' && copyBoard[row - 1][column + 1] === players[otherPlayerNumber]) {\r\n                        possibleMoves.push([row - 2, column + 2]);\r\n                    }\r\n                    if (column - 2 > -1 && copyBoard[row - 2][column - 2] === '' && copyBoard[row - 1][column - 1] === players[otherPlayerNumber]) {\r\n                        possibleMoves.push([row - 2, column - 2]);\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...checkers,\r\n                chosenChecker: [...copyChosenChecker],\r\n                gameStarted: copyGameStarted,\r\n                possibleMoves: [...possibleMoves],\r\n                alert: alert\r\n            }\r\n        }\r\n        case CHECKERS_NORMAL_MOVE: {\r\n            const copyBoard = checkers.board;\r\n            let copyPossibleMoves = checkers.possibleMoves;\r\n            const row = action.row;\r\n            const column = action.column;\r\n            const playerNumber = checkers.switchPlayer ? 1 : 0;\r\n            const otherPlayerNumber = checkers.switchPlayer ? 0 : 1;\r\n            let copyChosenChecker = checkers.chosenChecker;\r\n            let copySwitchPlayer = checkers.switchPlayer;\r\n            let copyTurnPhase = checkers.turnPhase;\r\n            const players = checkers.players;\r\n            let copyKings = checkers.kings;\r\n            let alert = '';\r\n            let counter = 0;\r\n\r\n            for (let i = 0; i < copyPossibleMoves.length; i++) {\r\n                counter++;\r\n                if (row === copyPossibleMoves[i][0] && column === copyPossibleMoves[i][1]) {\r\n                    counter++;\r\n                    copyPossibleMoves = [];\r\n                    copyBoard[row][column] = checkers.players[playerNumber];\r\n                    copyBoard[copyChosenChecker[0]][copyChosenChecker[1]] = '';\r\n                    copySwitchPlayer = !copySwitchPlayer;\r\n\r\n                    if (row === 0 && playerNumber === 0) {\r\n                        copyKings.push([row, column]);\r\n                    }\r\n                    if (row === 7 && playerNumber === 1) {\r\n                        copyKings.push([row, column]);\r\n                    }\r\n\r\n                    let count = 0;\r\n                    if (Math.abs(row - copyChosenChecker[0]) === 2) {\r\n                        copyBoard[Math.abs(row + copyChosenChecker[0]) / 2][Math.abs(column + copyChosenChecker[1]) / 2] = '';\r\n                        for (let j = 0; j < copyKings.length; j++) {\r\n                            if (copyKings[j][0] === (Math.abs(row + copyChosenChecker[0]) / 2)\r\n                                && copyKings[j][1] === (Math.abs(column + copyChosenChecker[1]) / 2)) {\r\n                                if (j + 1 < copyKings.length) {\r\n                                    copyKings = copyKings.slice(0, j).concat(copyKings.slice(j + 1));\r\n                                } else {\r\n                                    copyKings = copyKings.slice(0, j)\r\n                                }\r\n                            }\r\n                        }\r\n                        if (row + 2 < 8) {\r\n                            if (column + 2 < 8 && copyBoard[row + 2][column + 2] === '' && copyBoard[row + 1][column + 1] === players[otherPlayerNumber]) {\r\n                                count += 1;\r\n                            }\r\n                            if (column - 2 > -1 && copyBoard[row + 2][column - 2] === '' && copyBoard[row + 1][column - 1] === players[otherPlayerNumber]) {\r\n                                count += 1;\r\n                            }\r\n                        }\r\n                        if (row - 2 > -1) {\r\n                            if (column + 2 < 8 && copyBoard[row - 2][column + 2] === '' && copyBoard[row - 1][column + 1] === players[otherPlayerNumber]) {\r\n                                count += 1;\r\n                            }\r\n                            if (column - 2 > -1 && copyBoard[row - 2][column - 2] === '' && copyBoard[row - 1][column - 1] === players[otherPlayerNumber]) {\r\n                                count += 1;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (count > 0) {\r\n                        copySwitchPlayer = !copySwitchPlayer;\r\n                        copyTurnPhase = true;\r\n                        copyChosenChecker = [row, column];\r\n                    } else {\r\n                        copyChosenChecker = [];\r\n                        copyTurnPhase = false;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (counter === copyPossibleMoves.length) {\r\n                alert = 'Недопустимый ход';\r\n            }\r\n\r\n            return {\r\n                ...checkers,\r\n                board: [...copyBoard],\r\n                possibleMoves: [...copyPossibleMoves],\r\n                chosenChecker: [...copyChosenChecker],\r\n                switchPlayer: copySwitchPlayer,\r\n                kings: [...copyKings],\r\n                turnPhase: copyTurnPhase,\r\n                alert: alert\r\n            }\r\n        }\r\n        case CHECKERS_KINGS_MOVE: {\r\n            const copyBoard = checkers.board;\r\n            let copyPossibleMoves = checkers.possibleMoves;\r\n            const row = action.row;\r\n            const players = checkers.players;\r\n            let copyTurnPhase = checkers.turnPhase;\r\n            const column = action.column;\r\n            const playerNumber = checkers.switchPlayer ? 1 : 0;\r\n            const otherPlayerNumber = checkers.switchPlayer ? 0 : 1;\r\n            let copyChosenChecker = checkers.chosenChecker;\r\n            let copySwitchPlayer = checkers.switchPlayer;\r\n            const rowChosenChecker = copyChosenChecker[0];\r\n            const columnChosenChecker = copyChosenChecker[1];\r\n            let copyKings = checkers.kings;\r\n            let alert = '';\r\n            let counter = 0;\r\n\r\n            for (let i = 0; i < copyPossibleMoves.length; i++) {\r\n                counter++;\r\n                if (copyPossibleMoves[i][0] === row && copyPossibleMoves[i][1] === column) {\r\n                    counter++;\r\n                    copyPossibleMoves = [];\r\n                    copyChosenChecker = [];\r\n                    copyBoard[row][column] = checkers.players[playerNumber];\r\n                    copyBoard[rowChosenChecker][columnChosenChecker] = '';\r\n                    copySwitchPlayer = !copySwitchPlayer;\r\n                    let isEaten = false;\r\n                    for (let i = 0; i < copyKings.length; i++) {\r\n                        if (copyKings[i][0] === rowChosenChecker && copyKings[i][1] === columnChosenChecker) {\r\n                            copyKings[i] = [row, column];\r\n                        }\r\n                    }\r\n\r\n                    for (let i = 1; i < Math.abs(row - rowChosenChecker); i++) {\r\n                        if (row > rowChosenChecker && column > columnChosenChecker) {\r\n                            if (copyBoard[rowChosenChecker + i][columnChosenChecker + i] === players[otherPlayerNumber]) {\r\n                                for (let j = 0; j < copyKings.length; j++) {\r\n                                    if (copyKings[j][0] === rowChosenChecker + i && copyKings[j][1] === columnChosenChecker) {\r\n                                        copyKings = copyKings.slice(0, j).concat(copyKings.slice(j + 1));\r\n                                    }\r\n                                }\r\n                                isEaten = true;\r\n                                copyBoard[rowChosenChecker + i][columnChosenChecker + i] = '';\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (row < rowChosenChecker && column < columnChosenChecker) {\r\n                            if (copyBoard[rowChosenChecker - i][columnChosenChecker - i] === players[otherPlayerNumber]) {\r\n                                for (let j = 0; j < copyKings.length; j++) {\r\n                                    if (copyKings[j][0] === rowChosenChecker + i && copyKings[j][1] === columnChosenChecker) {\r\n                                        copyKings = copyKings.slice(0, j).concat(copyKings.slice(j + 1));\r\n                                    }\r\n                                }\r\n                                isEaten = true;\r\n                                copyBoard[rowChosenChecker - i][columnChosenChecker - i] = '';\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (row > rowChosenChecker && column < columnChosenChecker) {\r\n                            if (copyBoard[rowChosenChecker + i][columnChosenChecker - i] === players[otherPlayerNumber]) {\r\n                                for (let j = 0; j < copyKings.length; j++) {\r\n                                    if (copyKings[j][0] === rowChosenChecker + i && copyKings[j][1] === columnChosenChecker) {\r\n                                        copyKings = copyKings.slice(0, j).concat(copyKings.slice(j + 1));\r\n                                    }\r\n                                }\r\n                                isEaten = true;\r\n                                copyBoard[rowChosenChecker + i][columnChosenChecker - i] = '';\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (row < rowChosenChecker && column > columnChosenChecker) {\r\n                            if (copyBoard[rowChosenChecker - i][columnChosenChecker + i] === players[otherPlayerNumber]) {\r\n                                for (let j = 0; j < copyKings.length; j++) {\r\n                                    if (copyKings[j][0] === rowChosenChecker + i && copyKings[j][1] === columnChosenChecker) {\r\n                                        copyKings = copyKings.slice(0, j).concat(copyKings.slice(j + 1));\r\n                                    }\r\n                                }\r\n                                isEaten = true;\r\n                                copyBoard[rowChosenChecker - i][columnChosenChecker + i] = '';\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (isEaten) {\r\n                        let count = 0;\r\n                        let counterRow = row;\r\n                        let counterColumn = column;\r\n                        while (counterRow + 1 < 8 && counterColumn + 1 < 8) {\r\n                            counterRow += 1;\r\n                            counterColumn += 1;\r\n                            if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                                if (counterRow + 1 < 8 && counterColumn + 1 < 8\r\n                                    && copyBoard[counterRow + 1][counterColumn + 1] === '') {\r\n                                    count++;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        counterRow = row;\r\n                        counterColumn = column;\r\n                        while (counterRow - 1 > -1 && counterColumn - 1 > -1) {\r\n                            counterRow -= 1;\r\n                            counterColumn -= 1;\r\n                            if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                                if (counterRow - 1 > -1 && counterColumn - 1 > -1\r\n                                    && copyBoard[counterRow - 1][counterColumn - 1] === '') {\r\n                                    count++;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        counterRow = row;\r\n                        counterColumn = column;\r\n                        while (counterRow + 1 < 8 && counterColumn - 1 > -1) {\r\n                            counterRow += 1;\r\n                            counterColumn -= 1;\r\n                            if (counterRow + 1 < 8 && counterColumn - 1 > -1\r\n                                && copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                                if (copyBoard[counterRow + 1][counterColumn - 1] === '') {\r\n                                    count++;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        counterRow = row;\r\n                        counterColumn = column;\r\n                        while (counterRow - 1 > -1 && counterColumn + 1 < 8) {\r\n                            counterRow -= 1;\r\n                            counterColumn += 1;\r\n                            if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                                if (counterRow - 1 > -1 && counterColumn + 1 < 8\r\n                                    && copyBoard[counterRow - 1][counterColumn + 1] === '') {\r\n                                    count++;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (count > 0) {\r\n                            copySwitchPlayer = !copySwitchPlayer;\r\n                            copyTurnPhase = true;\r\n                            copyChosenChecker = [row, column];\r\n                        } else {\r\n                            copyChosenChecker = [];\r\n                            copyTurnPhase = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (counter === copyPossibleMoves.length) {\r\n                alert = 'Недопустимый ход';\r\n            }\r\n\r\n            return {\r\n                ...checkers,\r\n                board: [...copyBoard],\r\n                possibleMoves: [...copyPossibleMoves],\r\n                chosenChecker: [...copyChosenChecker],\r\n                switchPlayer: copySwitchPlayer,\r\n                turnPhase: copyTurnPhase,\r\n                alert: alert\r\n            }\r\n        }\r\n        case CHECKERS_CHOOSE_KINGS_CHECKER: {\r\n            let copyChosenChecker = [...checkers.chosenChecker];\r\n            const copyBoard = checkers.board;\r\n            const playerNumber = checkers.switchPlayer ? 1 : 0;\r\n            const players = checkers.players;\r\n            const possibleMoves = [];\r\n            const otherPlayerNumber = checkers.switchPlayer ? 0 : 1;\r\n            const row = action.row;\r\n            const column = action.column;\r\n            let alert;\r\n            if (checkers.gameOver) {\r\n                alert = 'Перезапустите игру'\r\n            }\r\n            if (action.player === players[playerNumber]\r\n                && ((checkers.turnPhase && row === copyChosenChecker[0] && column === copyChosenChecker[1])\r\n                    || !checkers.turnPhase) && !checkers.gameOver) {\r\n                copyChosenChecker = [row, column];\r\n                let counterRow = row;\r\n                let counterColumn = column;\r\n                if (!checkers.turnPhase) {\r\n                    while (counterRow + 1 < 8 && counterColumn + 1 < 8) {\r\n                        counterRow += 1;\r\n                        counterColumn += 1;\r\n                        if (copyBoard[counterRow][counterColumn] === '') {\r\n                            possibleMoves.push([counterRow, counterColumn]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    counterRow = row;\r\n                    counterColumn = column;\r\n                    while (counterRow - 1 > -1 && counterColumn - 1 > -1) {\r\n                        counterRow -= 1;\r\n                        counterColumn -= 1;\r\n                        if (copyBoard[counterRow][counterColumn] === '') {\r\n                            possibleMoves.push([counterRow, counterColumn]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    counterRow = row;\r\n                    counterColumn = column;\r\n                    while (counterRow + 1 < 8 && counterColumn - 1 > -1) {\r\n                        counterRow += 1;\r\n                        counterColumn -= 1;\r\n                        if (copyBoard[counterRow][counterColumn] === '') {\r\n                            possibleMoves.push([counterRow, counterColumn]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    counterRow = row;\r\n                    counterColumn = column;\r\n                    while (counterRow - 1 > -1 && counterColumn + 1 < 8) {\r\n                        counterRow -= 1;\r\n                        counterColumn += 1;\r\n                        if (copyBoard[counterRow][counterColumn] === '') {\r\n                            possibleMoves.push([counterRow, counterColumn]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                counterRow = row;\r\n                counterColumn = column;\r\n                while (counterRow + 1 < 8 && counterColumn + 1 < 8) {\r\n                    counterRow += 1;\r\n                    counterColumn += 1;\r\n                    if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                        while (counterRow + 1 < 8 && counterColumn + 1 < 8) {\r\n                            counterRow += 1;\r\n                            counterColumn += 1;\r\n                            if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]\r\n                                || copyBoard[counterRow][counterColumn] === players[playerNumber]) {\r\n                                break;\r\n                            }\r\n                            possibleMoves.push([counterRow, counterColumn]);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                counterRow = row;\r\n                counterColumn = column;\r\n                while (counterRow - 1 > -1 && counterColumn - 1 > -1) {\r\n                    counterRow -= 1;\r\n                    counterColumn -= 1;\r\n                    if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                        while (counterRow - 1 > -1 && counterColumn - 1 > -1) {\r\n                            counterRow -= 1;\r\n                            counterColumn -= 1;\r\n                            if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                                break;\r\n                            }\r\n                            possibleMoves.push([counterRow, counterColumn]);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                counterRow = row;\r\n                counterColumn = column;\r\n                while (counterRow + 1 < 8 && counterColumn - 1 > -1) {\r\n                    counterRow += 1;\r\n                    counterColumn -= 1;\r\n                    if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                        while (counterRow + 1 < 8 && counterColumn - 1 > -1) {\r\n                            counterRow += 1;\r\n                            counterColumn -= 1;\r\n                            if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                                break;\r\n                            }\r\n                            possibleMoves.push([counterRow, counterColumn]);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                counterRow = row;\r\n                counterColumn = column;\r\n                while (counterRow - 1 > -1 && counterColumn + 1 < 8) {\r\n                    counterRow -= 1;\r\n                    counterColumn += 1;\r\n                    if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                        while (counterRow - 1 > -1 && counterColumn + 1 < 8) {\r\n                            counterRow -= 1;\r\n                            counterColumn += 1;\r\n                            if (copyBoard[counterRow][counterColumn] === players[otherPlayerNumber]) {\r\n                                break;\r\n                            }\r\n                            possibleMoves.push([counterRow, counterColumn]);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...checkers,\r\n                chosenChecker: [...copyChosenChecker],\r\n                possibleMoves: [...possibleMoves],\r\n                alert: alert\r\n            }\r\n        }\r\n        case CHECKERS_END_GAME: return {...checkers, gameOver: true, gameStarted: false, winner: action.winner};\r\n        case CHECKERS_CLEARING_BOARD: {\r\n            const copyBoard = checkers.board;\r\n            for (let i = 0; i < copyBoard.length; i++) {\r\n                for (let j = 0; j < copyBoard[i].length; j++) {\r\n                    copyBoard[i][j] = '';\r\n                }\r\n            }\r\n            return {...checkers, board: [...copyBoard], gameOver: false, players: ['', ''], gameStarted: false, kings: []};\r\n        }\r\n        default:\r\n            return checkers\r\n    }\r\n}\r\n\r\nexport default reducerOfCheckers;","const initialState = {\r\n    switchPlayer: true,\r\n    players: ['', ''],\r\n    winner: '',\r\n    gameOver: false,\r\n    gameStarted: false,\r\n    board: ['','','','','','','','',''],\r\n    alert: '',\r\n    _characters: [\r\n        'cow', 'creeper', 'enderman', 'farmer',\r\n        'sheep', 'skeleton', 'spider', 'steve',\r\n        'zombie'\r\n    ]\r\n};\r\n\r\nexport default initialState;","import {\r\n    TIC_TAC_TOE_CHOOSE_CHARACTER, TIC_TAC_TOE_CLEARING_BOARD,\r\n    TIC_TAC_TOE_END_GAME, TIC_TAC_TOE_MOVE\r\n} from \"../actionTypes/ticTacToe\";\r\nimport initialState from \"../initialState/ticTacToe\"\r\n\r\nfunction ticTacToe (state = initialState, action) {\r\n    switch(action.type) {\r\n        case TIC_TAC_TOE_MOVE: {\r\n            const copyBoard = [...state.board];\r\n            let copyGameStarted;\r\n            let nextPlayer = state.switchPlayer;\r\n            let alert;\r\n\r\n            if (state.players[0] === '' || state.players[1] === '')\r\n                alert = 'Выберите персонажей';\r\n            if (state.gameOver) {\r\n                alert = 'Перезапустите игру'\r\n            }\r\n\r\n            if (copyBoard[action.index] === '' && !state.gameOver && state.players[0] !== '' && state.players[1] !== '') {\r\n                copyBoard[action.index] = state.switchPlayer ? state.players[0] : state.players[1];\r\n                nextPlayer = state.switchPlayer !== true;\r\n                copyGameStarted = true;\r\n            }\r\n            return {...state, board: copyBoard, switchPlayer: nextPlayer, gameStarted: copyGameStarted, alert: alert};\r\n        }\r\n        case TIC_TAC_TOE_CLEARING_BOARD: {\r\n            return {...state, board: state.board.map(value => ''), gameOver: false};\r\n        }\r\n        case TIC_TAC_TOE_END_GAME: return {...state, gameOver: true, gameStarted: false, winner: action.winner};\r\n        case TIC_TAC_TOE_CHOOSE_CHARACTER: {\r\n            const copyPlayers = [...state.players];\r\n            const otherPlayer = state.players[(action.number + 1) % 2];\r\n            let alert = state.alert;\r\n\r\n            if (otherPlayer === action.character)\r\n                alert = 'Нельзя выбирать одинаковых персонажей';\r\n\r\n            if (otherPlayer !== action.character && !state.gameStarted) {\r\n                copyPlayers[action.number] = action.character;\r\n            }\r\n            return {...state, players: [...copyPlayers], alert: alert};\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default ticTacToe;","const initialState = {\r\n        board: [\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n            ['', '', '', '', '', '', '', '', '', ''],\r\n        ],\r\n        _figures: {\r\n            I: {\r\n                color: \"cyan\",\r\n                shape: [\r\n                    1, 0, 0, 0,\r\n                    1, 0, 0, 0,\r\n                    1, 0, 0, 0,\r\n                    1, 0, 0, 0,\r\n                ]\r\n            },\r\n\r\n            J: {\r\n                color: \"blue\",\r\n                shape: [\r\n                    0, 0, 0,\r\n                    1, 1, 1,\r\n                    0, 0, 1,\r\n                ]\r\n            },\r\n\r\n            L: {\r\n                color: \"orange\",\r\n                shape: [\r\n                    0, 0, 0,\r\n                    1, 1, 1,\r\n                    1, 0, 0,\r\n                ]\r\n            },\r\n\r\n            O: {\r\n                color: \"yellow\",\r\n                shape: [\r\n                    1, 1,\r\n                    1, 1,\r\n                ]\r\n            },\r\n\r\n            S: {\r\n                color: \"green\",\r\n                shape: [\r\n                    0, 0, 0,\r\n                    0, 1, 1,\r\n                    1, 1, 0,\r\n                ]\r\n            },\r\n\r\n            T: {\r\n                color: \"purple\",\r\n                shape: [\r\n                    0, 0, 0,\r\n                    1, 1, 1,\r\n                    0, 1, 0,\r\n                ]\r\n            },\r\n\r\n            Z: {\r\n                color: \"red\",\r\n                shape: [\r\n                    0, 0, 0,\r\n                    1, 1, 0,\r\n                    0, 1, 1,\r\n                ]\r\n            }\r\n        }\r\n};\r\n\r\nexport default initialState;","import initialState from \"../initialState/tetris\";\r\n\r\nfunction reducerOfTetris(tetris = initialState, action) {\r\n    return tetris;\r\n}\r\n\r\nexport default reducerOfTetris;","import {combineReducers, compose, createStore} from \"redux\";\r\nimport reducerOfCheckers from \"./reducers/reducerOfCheckers\";\r\nimport reducerOfTicTacToe from \"./reducers/reducerOfTicTacToe\";\r\nimport reducerOfTetris from \"./reducers/reducerOfTetris\";\r\n\r\nconst reducer = combineReducers({\r\n    ticTacToe: reducerOfTicTacToe,\r\n    checkers: reducerOfCheckers,\r\n    tetris: reducerOfTetris\r\n});\r\n\r\nconst store = createStore(reducer, compose(\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport './styles/app.scss';\nimport Main from \"./components/main/Main\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className=\"App\">\n                <Main/>\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}